{"mappings":"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","sources":["src/index.js","src/formats/attachment.js","src/module.js","src/constants.json"],"sourcesContent":["import Attachment from './formats/attachment'\r\nimport Module from './module'\r\n\r\nQuill.register({\r\n  'formats/attachment': Attachment\r\n});\r\n\r\nexport default Module\r\n","\r\nconst Link = Quill.import('formats/link');\r\n\r\nexport default class Attachment extends Link {\r\n\r\n  static create(value) {\r\n    const node = super.create(value);\r\n    const { properties, id, render } = value\r\n    node.setAttribute('id', id);\r\n    node.setAttribute('href', null);\r\n    return render(node, properties);\r\n  }\r\n\r\n}\r\n\r\nAttachment.blotName  = 'attachment';\r\nAttachment.tagName   = 'a';\r\n","import constant from './constants';\r\n\r\nconst Module = Quill.import('core/module');\r\n\r\nconst generateId = () => {\r\n  const name = constant.ID_PREFIX\r\n  const id = new Date().getTime();\r\n  return `${name}_${id}`;\r\n}\r\n\r\nexport default class AttachmentModule extends Module {\r\n\r\n  constructor(quill, options) {\r\n    super();\r\n    this.quill = quill;\r\n    this.options = options;\r\n    this.range = null;\r\n\r\n    if (typeof (this.options.upload) !== \"function\") {\r\n      console.warn('[Missing config] upload function that returns a promise is required');\r\n    }\r\n\r\n    if (typeof (this.options.render) !== \"function\") {\r\n      console.warn('[Missing config] render function that returns a doom node is required');\r\n    }\r\n\r\n    this.quill\r\n      .getModule(\"toolbar\")\r\n      .addHandler(\"file\", this.selectLocalImage.bind(this));\r\n  }\r\n\r\n  selectLocalImage() {\r\n    this.range = this.quill.getSelection();\r\n    this.fileHolder = document.createElement(\"input\");\r\n    this.fileHolder.setAttribute(\"type\", \"file\");\r\n    this.fileHolder.setAttribute('accept', '*/*');\r\n    this.fileHolder.onchange = this.fileChanged.bind(this);\r\n    this.fileHolder.click();\r\n  }\r\n\r\n  fileChanged() {\r\n    const file = this.fileHolder.files[0];\r\n    const attachmentId = generateId();\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.addEventListener(\"load\", () => {\r\n      let base64content = fileReader.result;\r\n      this.insertAttachment({ dataUrl: base64content, file, id: attachmentId });\r\n    }, false);\r\n\r\n    if (file) {\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n\r\n    this.options.upload(file)\r\n      .then((url) => {\r\n        this.updateAttachment(attachmentId, url);\r\n      })\r\n      .catch(error => {\r\n        console.warn(error.message);\r\n      })\r\n  }\r\n\r\n  insertAttachment({ dataUrl, file, id }) {\r\n    this.quill.insertEmbed(\r\n      this.range.index,\r\n      \"attachment\",\r\n      {\r\n        id,\r\n        properties: { dataUrl, file },\r\n        render: this.options.render\r\n      }\r\n    );\r\n  }\r\n\r\n  updateAttachment(id, url) {\r\n    const element = document.getElementById(id);\r\n    if (element) {\r\n      element.setAttribute('href', url);\r\n      element.removeAttribute('id');\r\n      if (typeof this.options.onFileUploaded === \"function\") {\r\n        this.options.onFileUploaded(element, { url })\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","{\r\n  \"ID_PREFIX\": \"QUILL_ATTACHMENT\"\r\n}\r\n"],"names":[],"version":3,"file":"index.js.map"}